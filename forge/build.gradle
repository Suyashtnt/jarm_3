import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    maven {
        name = 'kotlinforforge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    mavenCentral()
}

Map<String, String> ENV = System.getenv()

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architect.minecraft}")
    mappings(minecraft.officialMojangMappings())
    forge("net.minecraftforge:forge:${rootProject.architect.minecraft}-${rootProject.forge_version}")
    // Remove the next line if you don't want to depend on the API
    modCompile("me.shedaniel:architectury:${rootProject.architectury_version}:forge")
    implementation "thedarkcolour:kotlinforforge:1.7.0"

    compileOnly(project(path: ":common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":common", configuration: "transformForgeFakeMod")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformForge")) {
        transitive = false
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    archiveClassifier = "forge"
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifact(remapJar.archivePath) {
                builtBy build
                classifier "forge"
            }
        }
    }
}

task publishModrinth (type: TaskModrinthUpload) {

    dependsOn("build")
    token = ENV['MODRINTH_TOKEN']
    projectId = 'kuED0e2M'
    versionNumber = rootProject.mod_version+"-forge"
    uploadFile = remapJar
    addGameVersion(rootProject.minecraft_version)
    addLoader('forge')
    changelog = '''
    That damn TABS dude forgot to update the changelog
    '''
    releaseType = "alpha"
}

rootProject.tasks.getByName("modrinthPublish").dependsOn tasks.getByName("publishModrinth")
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}